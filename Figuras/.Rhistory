#Limpar
rm(list=ls())
#Pacotes
library(data.table)
library(dplyr)
library(tidyr)
library(xtable)
library(stargazer)
#Diretório
setwd("C:/Users/Caio Azevedo/Dropbox/cb_demissao_tecnico/Caio/data")
#Carregamento e configuração dos dados----
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
View(base)
base<-base %>%
select(-m,-di,-tratado,-periodo)
View(base)
base<-base[complete.cases(base),]
View(base)
View(base)
probit <- glm(trocou ~ cum_surpresa + pts_4 + pos_rodada + pos_adv_rodada,
family = binomial(link = "probit"),
data = base)
summary(probit)
probit <- glm(trocou ~ cum_surpresa + pts_4 + pos_rodada,
family = binomial(link = "probit"),
data = base)
summary(probit)
probit <- glm(trocou ~ cum_surpresa + pts_4,
family = binomial(link = "probit"),
data = base)
summary(probit)
probit <- glm(trocou ~ cum_surpresa + pts_4 + pos_rodada,
family = binomial(link = "probit"),
data = base)
summary(probit)
logit <- glm(trocou ~ cum_surpresa + pts_4 + pos_rodada,
family = binomial(link = "logit"),
data = base)
summary(logit)
View(base)
PseudoR2(base, which = NULL)
PseudoR2(probit, c("McFadden", "Nagel"))
help(PseudoR2)
install.packages("aod")
library(aod)
PseudoR2(probit)
install.packages("rms")
library(rms)
lrm(formula = trocou ~ cum_surpresa + pts_4 + pos_rodada)
lrm(formula = trocou ~ cum_surpresa + pts_4 + pos_rodada, data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4, data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4 + diff_gols, data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4 + diff_gols + pos_adv_rodada, data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4 + diff_gols + pos_adv_rodada + pos_rodada, data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4 + diff_gols + pos_adv_rodada, data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4 + diff_gols + pos_adv_rodada + condicao,
data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4 + pts + diff_gols + pos_adv_rodada + condicao,
data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4 + vit + diff_gols + pos_adv_rodada + condicao,
data = base)
prm(formula = trocou ~ cum_surpresa + pts_4 + vit + diff_gols + pos_adv_rodada + condicao,
data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4 + vit + diff_gols + pos_adv_rodada + condicao,
data = base)
logit <- glm(trocou ~ cum_surpresa + pts_4 + vit + diff_gols + pos_adv_rodada + condicao,
family = binomial(link = "logit"),
data = base)
summary(logit)
base<-base %>%
mutate(condicao=ifelse(condicao==mandante,1,0))
base<-base %>%
mutate(condicao=ifelse(condicao=="mandante",1,0))
View(base)
logit <- glm(trocou ~ cum_surpresa + pts_4 + vit + diff_gols + pos_adv_rodada + condicao,
family = binomial(link = "logit"),
data = base)
summary(logit)
stargazer(logit)
probit <- glm(trocou ~ cum_surpresa + pts_4 + vit + diff_gols + pos_adv_rodada + condicao,
family = binomial(link = "probit"),
data = base)
summary(probit)
mpl<-lm(trocou ~ cum_surpresa + pts_4 + vit + diff_gols + pos_adv_rodada + condicao,
data = base)
stargazer(mpl,logit,probit)
#Limpar
rm(list=ls())
#Pacotes
library(data.table)
library(dplyr)
library(tidyr)
library(xtable)
library(stargazer)
#Diretório
setwd("C:/Users/Caio Azevedo/Dropbox/cb_demissao_tecnico/Caio/data")
#Carregamento e configuração dos dados----
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
base<-base %>%
select(-m,-di,-tratado,-periodo)
base<-base[complete.cases(base),]
base<-base %>%
mutate(condicao=ifelse(condicao=="mandante",1,0))
setwd("C:/Users/Caio Azevedo/Documents")
write.table(base,file='base.csv',sep=',',na="",quote=TRUE, row.names=FALSE)
logit <- glm(trocou ~ cum_surpresa + pts_4 + vit + diff_gols + pos_adv_rodada + condicao,
family = binomial(link = "logit"),
data = base)
summary(logit)
setwd("C:/Users/Caio Azevedo/Dropbox/cb_demissao_tecnico/Caio/data")
#Carregamento e configuração dos dados----
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
base<-base %>%
select(-m,-di,-tratado,-periodo)
base<-base[complete.cases(base),]
base<-base %>%
mutate(condicao=ifelse(condicao=="mandante",1,0)) %>%
mutate(derrota=1-vit)
View(base)
setwd("C:/Users/Caio Azevedo/Documents")
write.table(base,file='base.csv',sep=',',na="",quote=TRUE, row.names=FALSE)
logit <- glm(trocou ~ cum_surpresa + pts_4 + derrota*condicao + diff_gols + pos_adv_rodada,
family = binomial(link = "logit"),
data = base)
summary(logit)
logit <- glm(trocou ~ cum_surpresa + pts_4 + derrota + condicao + diff_gols + pos_adv_rodada,
family = binomial(link = "logit"),
data = base)
summary(logit)
base<-base %>%
mutate(condicao=ifelse(condicao=="mandante",1,0)) %>%
mutate(derrota=1-vit) %>%
mutate(int=derrota*condicao)
logit <- glm(trocou ~ cum_surpresa + pts_4 + int+ diff_gols + pos_adv_rodada,
family = binomial(link = "logit"),
data = base)
summary(logit)
View(base)
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
base<-base %>%
select(-m,-di,-tratado,-periodo)
base<-base[complete.cases(base),]
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
setwd("C:/Users/Caio Azevedo/Dropbox/cb_demissao_tecnico/Caio/data")
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
base<-base %>%
select(-m,-di,-tratado,-periodo)
base<-base[complete.cases(base),]
base<-base %>%
mutate(condicao=ifelse(condicao=="mandante",1,0)) %>%
mutate(derrota=1-vit) %>%
mutate(int=derrota*condicao)
View(base)
logit <- glm(trocou ~ cum_surpresa + pts_4 + int+ diff_gols + pos_adv_rodada,
family = binomial(link = "logit"),
data = base)
summary(logit)
logit <- glm(trocou ~ cum_surpresa + pts_4 + int+ diff_gols + pos_adv_rodada + condicao + derrota,
family = binomial(link = "logit"),
data = base)
summary(logit)
logit <- glm(trocou ~ cum_surpresa + pts_4 + int+ diff_gols + pos_adv_rodada,
family = binomial(link = "logit"),
data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4 + int+ diff_gols + pos_adv_rodada,
data = base)
lrm(formula = trocou ~ cum_surpresa + pts_4 + derrota + diff_gols + pos_adv_rodada + condicao,
data = base)
logit <- glm(trocou ~ cum_surpresa + pts_4 + int+ diff_gols + pos_adv_rodada,
family = binomial(link = "logit"),
data = base)
probit <- glm(trocou ~ cum_surpresa + pts_4 + int + diff_gols + pos_adv_rodada,
family = binomial(link = "probit"),
data = base)
stargazer(logit,probit)
View(base)
setwd("C:/Users/Caio Azevedo/Documents")
write.table(base,file='base.csv',sep=',',na="",quote=TRUE, row.names=FALSE)
setwd("C:/Users/Caio Azevedo/Dropbox/cb_demissao_tecnico/Caio/data")
#Carregamento e configuração dos dados----
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
base<-base %>%
select(-m,-di,-tratado,-periodo)
base<-base[complete.cases(base),]
base<-base %>%
mutate(condicao=ifelse(condicao=="mandante",1,0)) %>%
mutate(derrota=1-vit) %>%
mutate(int=derrota*condicao)
setwd("C:/Users/Caio Azevedo/Documents")
write.table(base,file='base.csv',sep=',',na="",quote=TRUE, row.names=FALSE)
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
base<-base %>%
select(-m,-di,-tratado,-periodo)
base<-base[complete.cases(base),]
base<-base %>%
mutate(condicao=ifelse(condicao=="mandante",1,0)) %>%
mutate(derrota=1-vit) %>%
mutate(interaction=derrota*condicao)
setwd("C:/Users/Caio Azevedo/Documents")
write.table(base,file='base.csv',sep=',',na="",quote=TRUE, row.names=FALSE)
View(base)
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
base<-base %>%
select(-m,-di,-tratado,-periodo)
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
base<-base %>%
select(-m,-di,-tratado,-periodo)
setwd("C:/Users/Caio Azevedo/Dropbox/cb_demissao_tecnico/Caio/data")
#Carregamento e configuração dos dados----
base <- read.table("base.csv", header = TRUE,sep = ",",dec=".",
fileEncoding = "latin1")
base<-base %>%
select(-m,-di,-tratado,-periodo)
base<-base[complete.cases(base),]
base<-base %>%
mutate(condicao=ifelse(condicao=="mandante",1,0)) %>%
mutate(derrota=1-vit) %>%
mutate(interaction=derrota*condicao)
setwd("C:/Users/Caio Azevedo/Documents")
write.table(base,file='base.csv',sep=',',na="",quote=TRUE, row.names=FALSE)
View(base)
logit <- glm(trocou ~ cum_surpresa + pts_4 + derrota + condicao + diff_gols + pos_adv_rodada,
family = binomial(link = "logit"),
data = base)
probit <- glm(trocou ~ cum_surpresa + pts_4 + derrota + condicao + diff_gols + pos_adv_rodada,
family = binomial(link = "probit"),
data = base)
stargazer(logit,probit)
5=5
5!=5
help(ses)
library(forecast)
library(dplyr)
library(lattice)
help(ses)
# Limpar
rm(list=ls())
#Diretório
setwd("C:/Users/Caio Azevedo/Documents/Documentos Caio/Github/Series-Temporais/Figuras")
# Carregando pacotes a serem utilizados
library(forecast)
library(dplyr)
library(lattice)
# Exportando os dados disponíveis no GitHub
site <- "https://raw.githubusercontent.com/caio-azevedo/Series-Temporais/master/data/PIB.csv"
dados<- read.table(site, header=T, sep=";", dec = ",",
col.names = c("ano", "mes", "pib"))
# Configurando os dados para o formato de séries temporais
attach(dados)
pib90 <-ts(pib, start=c(1990,1), frequency = 12)
# Fazendo um recorte de tempo nos dados a partir de 2000
pib2010<- window(pib90, start=2010)
# Plotando o gráfico da série
plot(pib2010)
# Aplicando a Suavização de Holt
pib_holt<-hw(pib2010, level = 95, h=10, seasonal = "additive")
plot(pib_holt)
pib_prev<- pib_holt[["model"]][["fitted"]]
pib_prev<-data.frame(pib_prev)
x<-data.frame(pib_holt, row.names = c(1:10))
x<-x %>%
select("Point.Forecast") %>%
rename("pib_prev"="Point.Forecast")
pib_prev<-bind_rows(pib_prev, x)
# Juntar as duas séries - original e suavizada - em uma matriz para formar um gráfico único
pib2010<-data.frame(pib2010)
# é necessário criar um vetor nulo pra completar a série original
# a repetição é de acordo com o número de períodos a ser previsto
nulo<-c(rep(NA,10))
nulo<-data.frame(nulo)
nulo<-nulo %>%
rename("pib2010"="nulo")
pib2010<-bind_rows(pib2010, nulo)
graf<-cbind(pib2010, pib_prev)
colnames(graf)<-c("Série Original", "SEH")
# Retornando para o formato temporal
graf_ts<-ts(graf, start=c(2010,1), frequency = 12)
# Plotar um único gráfico
xyplot(graf_ts, superpose = TRUE, lwd = 2)
# Limpar
rm(list=ls())
#Diretório
setwd("C:/Users/Caio Azevedo/Documents/Documentos Caio/Github/Series-Temporais/Figuras")
# Carregando pacotes a serem utilizados
library(forecast)
library(dplyr)
library(lattice)
# Exportando os dados disponíveis no GitHub
site <- "https://raw.githubusercontent.com/caio-azevedo/Series-Temporais/master/data/PIB.csv"
dados<- read.table(site, header=T, sep=";", dec = ",",
col.names = c("ano", "mes", "pib"))
# Configurando os dados para o formato de séries temporais
attach(dados)
pib90 <-ts(pib, start=c(1990,1), frequency = 12)
# Fazendo um recorte de tempo nos dados a partir de 2000
pib2010<- window(pib90, start=2010)
# Plotando o gráfico da série
plot(pib2010)
# Aplicando a Suavização de Holt - Winters erros aditivos
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive")
plot(pib_hw)
# Gerar uma nova série através da Suavização Exponencial Simples (SES)
pib_prev<- pib_hw[["model"]][["fitted"]]
pib_prev<-data.frame(pib_prev)
#Retirando os valores previstos da SES para fora da amostra
x<-data.frame(pib_hw, row.names = c(1:10))
x<-x %>%
select("Point.Forecast") %>%
rename("pib_prev"="Point.Forecast")
pib_prev<-bind_rows(pib_prev, x)
# Juntar as duas séries - original e suavizada - em uma matriz para formar um gráfico único
pib2010<-data.frame(pib2010)
# é necessário criar um vetor nulo pra completar a série original
# a repetição é de acordo com o número de períodos a ser previsto
nulo<-c(rep(NA,10))
nulo<-data.frame(nulo)
nulo<-nulo %>%
rename("pib2010"="nulo")
pib2010<-bind_rows(pib2010, nulo)
graf<-cbind(pib2010, pib_prev)
colnames(graf)<-c("Série Original", "HW")
# Retornando para o formato temporal
graf_ts<-ts(graf, start=c(2010,1), frequency = 12)
# Plotar um único gráfico
xyplot(graf_ts, superpose = TRUE, lwd = 2)
dev.copy(pdf,"pib.pdf")
dev.off()
# Limpar
rm(list=ls())
#Diretório
setwd("C:/Users/Caio Azevedo/Documents/Documentos Caio/Github/Series-Temporais/Figuras")
# Carregando pacotes a serem utilizados
library(forecast)
library(dplyr)
library(lattice)
# Exportando os dados disponíveis no GitHub
site <- "https://raw.githubusercontent.com/caio-azevedo/Series-Temporais/master/data/PIB.csv"
dados<- read.table(site, header=T, sep=";", dec = ",",
col.names = c("ano", "mes", "pib"))
# Configurando os dados para o formato de séries temporais
attach(dados)
pib90 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib90)
pib2010<- window(pib90, start=2010)
# Plotando o gráfico da série
plot(pib2010)
plot(pib90)
plot(pib90)
dev.copy(pdf,"pib90.pdf")
dev.off()
# Fazendo um recorte de tempo nos dados a partir de 2000
pib2010<- window(pib90, start=2010)
# Plotando o gráfico da série
plot(pib2010)
dev.copy(pdf,"pib2010.pdf")
dev.off()

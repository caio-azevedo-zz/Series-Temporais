pib<-c(1,2,3,4,5)
pib90 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib90)
pib<-c(1,2,5,7,14)
pib90 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib90)
pib2010 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib2010)
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive")
library(forecast)
library(dplyr)
library(lattice)
library(xtable)
library(stargazer)
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive")
pib<-c(1,2,3,4,5,6,7,8,9,10, 13, 17, 18, 20)
pib<-c(1,2,5,7,14)
# Configurando os dados para o formato de séries temporais
pib2010 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib)
# Aplicando a Suavização de Holt - Winters erros aditivos----
pib_hw<-hw(pib2010, level = 95, h=2, seasonal = "additive")
pib<-c(1,2,5,7,14, 15, 16, 20, 26, 30, 35, 50, 100, 120, 150)
pib2010 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib)
# Aplicando a Suavização de Holt - Winters erros aditivos----
pib_hw<-hw(pib2010, level = 95, h=2, seasonal = "additive")
pib2010 <-ts(pib, start=c(1990,1), frequency = 12)
pib<-c(1,2,5,7,14, 12, 16, 20, 26, 30, 28, 50, 45, 120, 80)
# Configurando os dados para o formato de séries temporais
pib2010 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib)
# Aplicando a Suavização de Holt - Winters erros aditivos----
pib_hw<-hw(pib2010, level = 95, h=2, seasonal = "additive")
pib<-c(1,2,5,7,14, 12, 16, 20, 26, 30, 28, 50, 45, 120, 80)
pib2010 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib2010)
pib_hw<-hw(pib2010, level = 95, h=2, seasonal = "additive")
pib_hw<-hw(pib2010, level = 95, h=2, alpha = 0.2, beta = 0.01,seasonal = "additive")
pib_hw<-hw(pib2010, level = 95, h=1, alpha = 0.2, beta = 0.01, seasonal = "additive")
pib_hw<-hw(pib2010, level = 95, h=1, alpha = 0.2, beta = 0.01, gamma = 0.0001,
phi = 0.05, seasonal = "additive")
pib_hw<-hw(pib2010, level = 95, h=1, alpha = 0.2, beta = 0.01, gamma = 0.01,
phi = 0.05, seasonal = "additive")
plot(pib_hw)
pib_prev<- pib_hw[["model"]][["fitted"]]
pib_prev<-data.frame(pib_prev)
View(pib_prev)
View(pib_prev)
pib_hw
pib_hw<-hw(pib2010, level = 95, h=1, alpha = 0.2, beta = 0.01, gamma = 0.01,
phi = 0.001, seasonal = "additive")
plot(pib_hw)
pib_prev<- pib_hw[["model"]][["fitted"]]
pib_prev<-data.frame(pib_prev)
View(pib_prev)
View(pib_hw)
pib<-c(1.2,2.5,5.4,7,14.1, 12.4, 16.3, 20, 26, 30, 28, 50, 45, 120, 80)
# Configurando os dados para o formato de séries temporais
pib2010 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib2010)
# Aplicando a Suavização de Holt - Winters erros aditivos----
pib_hw<-hw(pib2010, level = 95, h=1, alpha = 0.2, beta = 0.01, gamma = 0.01,
phi = 0.001, seasonal = "additive")
pib_prev<- pib_hw[["model"]][["fitted"]]
pib_prev<-data.frame(pib_prev)
View(pib_prev)
pib_hw
rm(list=ls())
pib<-c(1.2,2.5,5.4,7,14.1, 12.4, 16.3, 20, 26, 30, 28, 50, 45, 120, 80)
# Configurando os dados para o formato de séries temporais
pib2010 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib2010)
# Aplicando a Suavização de Holt - Winters erros aditivos----
pib_hw<-hw(pib2010, level = 95, h=1, alpha = 0.2, beta = 0.01, gamma = 0.01,
phi = 0.001, seasonal = "additive")
plot(pib_hw)
pib_prev<- pib_hw[["model"]][["fitted"]]
pib_prev<-data.frame(pib_prev)
View(pib_prev)
pib<-c(1.2,2.5,5.4,7,14.1, 12.4, 16.3, 20, 26, 30, 28, 50, 45, 120, 80,110, 120, 125, 122)
# Configurando os dados para o formato de séries temporais
pib2010 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib2010)
# Aplicando a Suavização de Holt - Winters erros aditivos----
pib_hw<-hw(pib2010, level = 95, h=1, alpha = 0.2, beta = 0.01, gamma = 0.01,
phi = 0.001, seasonal = "additive")
plot(pib_hw)
# Gerar uma nova série através da Suavização Exponencial de Holt-Winters (HW)
pib_prev<- pib_hw[["model"]][["fitted"]]
pib_prev<-data.frame(pib_prev)
View(pib_prev)
site <- "https://raw.githubusercontent.com/caio-azevedo/Series-Temporais/master/data/PIB.csv"
dados<- read.table(site, header=T, sep=";", dec = ",",
col.names = c("ano", "mes", "pib"))
# Configurando os dados para o formato de séries temporais
attach(dados)
pib90 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib90)
rm(list=ls())
site <- "https://raw.githubusercontent.com/caio-azevedo/Series-Temporais/master/data/PIB.csv"
dados<- read.table(site, header=T, sep=";", dec = ",",
col.names = c("ano", "mes", "pib"))
# Configurando os dados para o formato de séries temporais
attach(dados)
pib90 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib90)
pib2010<- window(pib90, start=2010)
# Plotando o gráfico da série
plot(pib2010)
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive")
plot(pib_hw)
pib_prev<- pib_hw[["model"]][["fitted"]]
pib_prev<-data.frame(pib_prev)
View(pib_prev)
x<-data.frame(pib_hw, row.names = c(1:10))
x<-x %>%
select("Point.Forecast") %>%
rename("pib_prev"="Point.Forecast")
pib_prev<-bind_rows(pib_prev, x)
pib2010<-data.frame(pib2010)
# é necessário criar um vetor nulo pra completar a série original
# a repetição é de acordo com o número de períodos a ser previsto
nulo<-c(rep(NA,10))
nulo<-data.frame(nulo)
nulo<-nulo %>%
rename("pib2010"="nulo")
pib2010<-bind_rows(pib2010, nulo)
graf<-cbind(pib2010, pib_prev)
colnames(graf)<-c("Série Original", "HW")
View(graf)
# Limpar----
rm(list=ls())
#Diretório
setwd("C:/Users/Caio Azevedo/Documents/Documentos Caio/Github/Series-Temporais/Figuras")
# Carregando pacotes a serem utilizados
library(forecast)
library(dplyr)
library(lattice)
library(xtable)
library(stargazer)
# Exportando os dados disponíveis no GitHub
site <- "https://raw.githubusercontent.com/caio-azevedo/Series-Temporais/master/data/PIB.csv"
dados<- read.table(site, header=T, sep=";", dec = ",",
col.names = c("ano", "mes", "pib"))
# Configurando os dados para o formato de séries temporais
attach(dados)
pib90 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib90)
dev.copy(pdf,"pib90.pdf")
dev.off()
# Fazendo um recorte de tempo nos dados a partir de 2000
pib2010<- window(pib90, start=2010)
# Plotando o gráfico da série
plot(pib2010)
dev.copy(pdf,"pib2010.pdf")
dev.off()
# Aplicando a Suavização de Holt - Winters erros aditivos----
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive")
plot(pib_hw)
# Gerar uma nova série através da Suavização Exponencial de Holt-Winters (HW)
pib_prev<- pib_hw[["model"]][["fitted"]]
pib_prev<-data.frame(pib_prev)
#Retirando os valores previstos da SES para fora da amostra----
x<-data.frame(pib_hw, row.names = c(1:10))
x<-x %>%
select("Point.Forecast") %>%
rename("pib_prev"="Point.Forecast")
pib_prev<-bind_rows(pib_prev, x)
# Juntar as duas séries - original e suavizada - em uma matriz para formar um gráfico único
pib2010<-data.frame(pib2010)
# é necessário criar um vetor nulo pra completar a série original
# a repetição é de acordo com o número de períodos a ser previsto
nulo<-c(rep(NA,10))
nulo<-data.frame(nulo)
nulo<-nulo %>%
rename("pib2010"="nulo")
pib2010<-bind_rows(pib2010, nulo)
graf<-cbind(pib2010, pib_prev)
colnames(graf)<-c("Série Original", "HW")
# Retornando para o formato temporal----
graf_ts<-ts(graf, start=c(2010,1), frequency = 12)
# Plotar um único gráfico----
xyplot(graf_ts, superpose = TRUE, lwd = 2)
dev.copy(pdf,"pib.pdf")
dev.off()
#Encontrar os parâmetros estimados
parametros<-data.frame(round(pib_hw[["model"]][["par"]], digits = 4))
parametros<-data.frame(parametros[1:3,])
colnames(parametros)<-c("Parâmetros estimados")
rownames(parametros)<-c("alpha", "beta", "gamma")
# Estados Iniciais
estado_inic<-data.frame(round(pib_hw[["model"]][["initstate"]]))
colnames(estado_inic)<-c("Estados Iniciais")
#Critérios de informação
loglik <- pib_hw[["model"]][["loglik"]]
aic <- pib_hw[["model"]][["aic"]]
bic <- pib_hw[["model"]][["bic"]]
aicc <- pib_hw[["model"]][["aicc"]]
mse <- pib_hw[["model"]][["mse"]]
amse <- pib_hw[["model"]][["amse"]]
inf_crit<-data.frame(c(loglik, aic, bic, aicc, mse, amse))
colnames(inf_crit)<-c("Critérios de Informação")
rownames(inf_crit)<-c("LogLik", "AIC", "BIC", "AICC", "MSE", "AMSE")
View(pib_hw)
View(inf_crit)
View(estado_inic)
View(pib2010)
View(pib_prev)
pib_hw[["model"]][["states"]]
modelo <- ets(pib2010, "AAA")
modelo
modelo <- ets(pib2010, "AAA")
modelo
# Limpar----
rm(list=ls())
#Diretório
setwd("C:/Users/Caio Azevedo/Documents/Documentos Caio/Github/Series-Temporais/Figuras")
# Carregando pacotes a serem utilizados
library(forecast)
library(dplyr)
library(lattice)
library(xtable)
library(stargazer)
# Exportando os dados disponíveis no GitHub
site <- "https://raw.githubusercontent.com/caio-azevedo/Series-Temporais/master/data/PIB.csv"
dados<- read.table(site, header=T, sep=";", dec = ",",
col.names = c("ano", "mes", "pib"))
# Configurando os dados para o formato de séries temporais
attach(dados)
pib90 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib90)
dev.copy(pdf,"pib90.pdf")
dev.off()
# Fazendo um recorte de tempo nos dados a partir de 2000
pib2010<- window(pib90, start=2010)
# Plotando o gráfico da série
plot(pib2010)
dev.copy(pdf,"pib2010.pdf")
dev.off()
# Aplicando a Suavização de Holt - Winters erros aditivos----
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive")
plot(pib_hw)
modelo <- ets(pib2010, "AAA")
modelo
pib_hw[["model"]][["states"]]
help(hw)
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive", initial = "simple")
View(pib_hw)
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive", initial = "simple")
View(pib_hw)
pib_hw[["model"]][["states"]]
pib_hw[["model"]][["states"]]
# Limpar----
rm(list=ls())
#Diretório
setwd("C:/Users/Caio Azevedo/Documents/Documentos Caio/Github/Series-Temporais/Figuras")
# Carregando pacotes a serem utilizados
library(forecast)
library(dplyr)
library(lattice)
library(xtable)
library(stargazer)
# Exportando os dados disponíveis no GitHub
site <- "https://raw.githubusercontent.com/caio-azevedo/Series-Temporais/master/data/PIB.csv"
dados<- read.table(site, header=T, sep=";", dec = ",",
col.names = c("ano", "mes", "pib"))
# Configurando os dados para o formato de séries temporais
attach(dados)
pib90 <-ts(pib, start=c(1990,1), frequency = 12)
plot(pib90)
dev.copy(pdf,"pib90.pdf")
dev.off()
# Fazendo um recorte de tempo nos dados a partir de 2000
pib2010<- window(pib90, start=2010)
# Plotando o gráfico da série
plot(pib2010)
dev.copy(pdf,"pib2010.pdf")
dev.off()
# Aplicando a Suavização de Holt - Winters erros aditivos----
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive")
plot(pib_hw)
View(pib_hw)
pib_hw[["model"]][["states"]]
pib_hw
pib_hw[["model"]][["par"]][["beta"]]
pib_hw[["x"]]
modelo<-ets(pib2010,"AAA", restrict = F)
modelo
View(modelo)
modelo<-ets(pib2010,"AAA")
modelo
library(stats)
modelo<-HoltWinters(pib2010, seasonal = c("additive"))
modelo
modelo<-HoltWinters(pib2010, beta = FALSE, seasonal = c("additive"))
modelo
View(modelo)
View(pib_hw)
pib_hw
pib_hw<-hw(pib2010, level = 95, h=10, initial = "simple", seasonal = "additive")
View(pib_hw)
pib_hw<-hw(pib2010, level = 95, h=10, initial = "optimal", seasonal = "additive")
View(pib_hw)
pib_hw[["model"]][["states"]]
pib_hw<-hw(pib2010, level = 95, h=10, initial = "simple", seasonal = "additive")
View(pib_hw)
pib_hw[["model"]][["states"]]
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive")
View(pib_hw)
modelo<-HoltWinters(pib2010, seasonal="additive", start.periods = 1)
modelo<-HoltWinters(pib2010, seasonal="additive")
modelo
View(modelo)
modelo[["fitted"]]
summary(pib_hw)
plot(summary(pib_hw))
summary(pib_hw)
View(modelo)
pib_hw<-hw(pib2010, level = 95, h=5, seasonal = "additive")
summary(pib_hw)
pib_hw<-hw(pib2010, level = 95, h=10, exponential = TRUE, seasonal = "additive")
pib_hw<-hw(pib2010, level = 95, h=10, exponential = TRUE, seasonal = "additive")
pib_hw<-hw(pib2010, level = 95, h=10, exponential = TRUE, seasonal = "additive")
pib_hw<-hw(pib2010, level = 95, h=10, seasonal = "additive")
